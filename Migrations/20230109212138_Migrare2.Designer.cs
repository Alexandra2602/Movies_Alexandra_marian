// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies_Alexandra_marian.Data;

#nullable disable

namespace Movies_Alexandra_marian.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20230109212138_Migrare2")]
    partial class Migrare2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Director", b =>
                {
                    b.Property<int>("DirectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorID"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorID");

                    b.ToTable("Director", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.DistributedMovie", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("int");

                    b.Property<int>("DistributionID")
                        .HasColumnType("int");

                    b.HasKey("MovieID", "DistributionID");

                    b.HasIndex("DistributionID");

                    b.ToTable("DistributedMovie", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Distribution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("DistributionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Distribution", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.History", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"), 1L, 1);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("MovieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoryID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("MovieID");

                    b.ToTable("History", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("DirectorID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DirectorID");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.DistributedMovie", b =>
                {
                    b.HasOne("Movies_Alexandra_marian.Models.Distribution", "Distribution")
                        .WithMany("DistributedMovies")
                        .HasForeignKey("DistributionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies_Alexandra_marian.Models.Movie", "Movie")
                        .WithMany("DistributedMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribution");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.History", b =>
                {
                    b.HasOne("Movies_Alexandra_marian.Models.Customer", "Customer")
                        .WithMany("Histories")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies_Alexandra_marian.Models.Movie", "Movie")
                        .WithMany("Histories")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Movie", b =>
                {
                    b.HasOne("Movies_Alexandra_marian.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Customer", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Distribution", b =>
                {
                    b.Navigation("DistributedMovies");
                });

            modelBuilder.Entity("Movies_Alexandra_marian.Models.Movie", b =>
                {
                    b.Navigation("DistributedMovies");

                    b.Navigation("Histories");
                });
#pragma warning restore 612, 618
        }
    }
}
